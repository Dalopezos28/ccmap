# Generated by Django 4.2.7 on 2025-10-24 03:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('comedores', '0002_comedor_accesible_silla_ruedas_comedor_acepta_ninos_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertaSuscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('telefono', models.CharField(help_text='Formato: +57 300 123 4567', max_length=50, verbose_name='Teléfono/WhatsApp')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('tipo_alerta', models.CharField(choices=[('CUPOS_BAJOS', 'Cupos Bajos en mi Barrio'), ('NUEVO_COMEDOR', 'Nuevo Comedor Cercano'), ('MENU_DIA', 'Menú del Día'), ('APERTURA', 'Comedor Abierto Ahora')], default='CUPOS_BAJOS', max_length=30, verbose_name='Tipo de Alerta')),
                ('canal_preferido', models.CharField(choices=[('WHATSAPP', 'WhatsApp'), ('SMS', 'SMS'), ('EMAIL', 'Email')], default='WHATSAPP', max_length=20, verbose_name='Canal Preferido')),
                ('barrios_interes', models.TextField(blank=True, help_text='Barrios separados por comas (ej: San Bosco, Siloé, Alfonso López)', verbose_name='Barrios de Interés')),
                ('radio_km', models.IntegerField(default=5, help_text='Radio de búsqueda desde tu ubicación', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Radio en Kilómetros')),
                ('latitud', models.FloatField(blank=True, null=True, verbose_name='Latitud')),
                ('longitud', models.FloatField(blank=True, null=True, verbose_name='Longitud')),
                ('activa', models.BooleanField(default=True, verbose_name='Suscripción Activa')),
                ('verificada', models.BooleanField(default=False, verbose_name='Número Verificado')),
                ('fecha_suscripcion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Suscripción')),
                ('ultima_notificacion', models.DateTimeField(blank=True, null=True, verbose_name='Última Notificación Enviada')),
            ],
            options={
                'verbose_name': 'Suscripción de Alerta',
                'verbose_name_plural': 'Suscripciones de Alertas',
                'ordering': ['-fecha_suscripcion'],
                'indexes': [models.Index(fields=['telefono', 'activa'], name='comedores_a_telefon_0f10a7_idx'), models.Index(fields=['tipo_alerta', 'activa'], name='comedores_a_tipo_al_0c57c6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Metrica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_metrica', models.CharField(choices=[('COMIDAS_SERVIDAS', 'Comidas Servidas'), ('CUPOS_OCUPADOS', 'Cupos Ocupados'), ('USUARIOS_ATENDIDOS', 'Usuarios Atendidos'), ('DONACIONES_RECIBIDAS', 'Donaciones Recibidas')], max_length=30, verbose_name='Tipo de Métrica')),
                ('valor', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valor')),
                ('fecha', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('metadata', models.JSONField(blank=True, help_text='Datos adicionales en formato JSON', null=True, verbose_name='Metadata Adicional')),
                ('comedor', models.ForeignKey(blank=True, help_text='Dejar vacío para métricas globales', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metricas', to='comedores.comedor', verbose_name='Comedor')),
            ],
            options={
                'verbose_name': 'Métrica',
                'verbose_name_plural': 'Métricas',
                'ordering': ['-fecha'],
                'indexes': [models.Index(fields=['comedor', 'tipo_metrica', '-fecha'], name='comedores_m_comedor_0f93f7_idx'), models.Index(fields=['tipo_metrica', '-fecha'], name='comedores_m_tipo_me_841b41_idx')],
            },
        ),
        migrations.CreateModel(
            name='Donacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_donante', models.CharField(max_length=200, verbose_name='Nombre del Donante')),
                ('telefono_donante', models.CharField(max_length=50, verbose_name='Teléfono')),
                ('email_donante', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('tipo_donacion', models.CharField(choices=[('ALIMENTOS', 'Alimentos No Perecederos'), ('PERECEDEROS', 'Alimentos Perecederos'), ('DINERO', 'Dinero en Efectivo'), ('INSUMOS', 'Insumos de Cocina'), ('VOLUNTARIADO', 'Tiempo como Voluntario')], max_length=30, verbose_name='Tipo de Donación')),
                ('descripcion', models.TextField(help_text='Ej: 20 kg de arroz, 10 kg de frijol, 5 litros de aceite', verbose_name='Descripción')),
                ('cantidad_estimada_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Para alimentos, peso aproximado', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cantidad Estimada (kg)')),
                ('valor_monetario', models.DecimalField(blank=True, decimal_places=2, help_text='Valor estimado en pesos colombianos', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valor Monetario')),
                ('direccion_recoleccion', models.TextField(blank=True, help_text='Dejar vacío si el donante llevará la donación', verbose_name='Dirección de Recolección')),
                ('barrio_donante', models.CharField(blank=True, max_length=100, verbose_name='Barrio')),
                ('latitud_donante', models.FloatField(blank=True, null=True, verbose_name='Latitud Donante')),
                ('longitud_donante', models.FloatField(blank=True, null=True, verbose_name='Longitud Donante')),
                ('fecha_asignacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Asignación')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente de Asignación'), ('ASIGNADA', 'Asignada a Comedor'), ('EN_TRANSITO', 'En Tránsito'), ('ENTREGADA', 'Entregada'), ('CANCELADA', 'Cancelada')], default='PENDIENTE', max_length=20, verbose_name='Estado')),
                ('fecha_entrega_estimada', models.DateField(blank=True, null=True, verbose_name='Fecha de Entrega Estimada')),
                ('fecha_entrega_real', models.DateField(blank=True, null=True, verbose_name='Fecha de Entrega Real')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('notas_admin', models.TextField(blank=True, help_text='Notas internas sobre la donación', verbose_name='Notas del Administrador')),
                ('comedor_asignado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donaciones', to='comedores.comedor', verbose_name='Comedor Asignado')),
            ],
            options={
                'verbose_name': 'Donación',
                'verbose_name_plural': 'Donaciones',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['estado', '-fecha_creacion'], name='comedores_d_estado_761968_idx'), models.Index(fields=['comedor_asignado', '-fecha_creacion'], name='comedores_d_comedor_b0038f_idx'), models.Index(fields=['barrio_donante'], name='comedores_d_barrio__df9923_idx')],
            },
        ),
    ]
